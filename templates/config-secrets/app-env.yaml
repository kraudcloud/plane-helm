apiVersion: v1
kind: Secret
type: Opaque
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-app-secrets
stringData:
  # This is the secret key used by Django to generate secure hashes.
  SECRET_KEY: {{ .Values.env.secret_key | default (randAlphaNum 255 | b64enc) | quote }}
  {{- if .Values.redis.enabled }}
  REDIS_URL: "redis://:{{ .Values.redis.auth.password | urlquery }}@{{ .Release.Name }}-redis-master.{{ .Release.Namespace }}:{{ .Values.redis.master.service.ports.redis }}"
  {{- else }}
  REDIS_URL: {{ required "redis.url is required when redis.enabled is false" .Values.redis.url | quote }}
  {{- end }}
  {{- if .Values.postgresql.enabled }}
  DATABASE_URL: "postgresql://{{ .Values.postgresql.auth.username | urlquery }}:{{ .Values.postgresql.auth.password | urlquery }}@{{ .Release.Name }}-postgresql.{{ .Release.Namespace }}/{{ .Values.postgresql.auth.database }}"
  {{- else }}
  DATABASE_URL: {{ required "posgres.url is required when postgres.enabled is false" .Values.postgresql.url | quote }}
  {{- end }}

  {{- if .Values.rabbitmq.enabled }}
  AMQP_URL: "amqp://{{ .Values.rabbitmq.auth.username | urlquery}}:{{ .Values.rabbitmq.auth.password | urlquery}}@{{ .Release.Name }}-rabbitmq.{{ .Release.Namespace }}/"
  {{- else if .Values.rabbitmq.external_rabbitmq_url }}
  AMQP_URL: {{ required "rabbitmq.url is required when rabbitmq.enabled is false" .Values.rabbitmq.url }}
  {{ end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-app-vars
data:
    SENTRY_DSN: {{ .Values.env.sentry_dsn | default "" | quote}}
    SENTRY_ENVIRONMENT: {{ .Values.env.sentry_environment | default "" | quote}}
    DEBUG: "0"
    DOCKERIZED: "1"
    GUNICORN_WORKERS: {{ .Values.env.gunicorn_api_workers | default 1 | quote }}
    ENABLE_SIGNUP: {{.Values.env.enable_signup | default 1 | quote }}

    {{- if and .Values.ingress.enabled .Values.ingress.host }}
    WEB_URL: "http://{{ .Values.ingress.host }}"
    {{- else }}
    WEB_URL: ""
    {{- end }}


    {{- if eq .Values.env.cors_allowed_origins "*"}}
    CORS_ALLOWED_ORIGINS: "*"
    {{- else if and .Values.ingress.enabled .Values.ingress.host .Values.env.cors_allowed_origins }}
    CORS_ALLOWED_ORIGINS: "http{{ if .Values.ingress.tls }}s{{ end }}://{{ .Values.ingress.host }},{{ .Values.env.cors_allowed_origins }}"
    {{- else if .Values.env.cors_allowed_origins }}
    CORS_ALLOWED_ORIGINS: "{{ .Values.env.cors_allowed_origins }}"
    {{- else if and .Values.ingress.enabled .Values.ingress.host}}
    CORS_ALLOWED_ORIGINS: "http{{ if .Values.ingress.tls }}s{{ end }}://{{ .Values.ingress.host }}"
    {{- else }}
    CORS_ALLOWED_ORIGINS: ""
    {{- end }}
